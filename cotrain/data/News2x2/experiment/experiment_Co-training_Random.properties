# Experiment: Co-training with random feature split

# The value of the algorithm property must be the Class implementing AlgorithmIF. 
# This defines the algorithm that will be run, i.e. the experiment that will be performed.
algorithm=algorithms.co_training.CoTraining

# The list measures to be calculated in the experiment (accuracy, f-measure, ...). 
# Specify as the array of String values separated with whitespace character ("measure1" "measure2" ...) 
# where each String represents the name of the class (full path) that implements MeasureIF interface.
measures="classificationResult.measures.AccuracyMeasure"
# calculate the measure specified above (e.g. f-measure) for this class. Multiple classes can be set, avg means averaged measure
# one class per each measure must be specified 
measuresForClass="avg"

# if loadClassifiers=true, load training classifier statistic from the file specified in ClassifiersFileName property. 
# If false do not load the training classifier statistics. Since co-training does not depend on the previously generated 
# classifier statistics (as do RSSalg and MajorityVote), this parameter is set to false
loadClassifiers=false
# Denotes the file location of the classifier statistic file. If the loadClassifier parameter value is false this property value is ignored. 
# An exception is the algorithms.RSSalg.MajorityVote algorithm: if the  loadClassifier parameter value is false, test classifier 
# statistic will be loaded from this file location
ClassifiersFilename=

# If writeClassifiers=false record both train and test classifier statistics obtained during algorithm execution. For algorithms that do not 
# label unlabeled instances during execution (settings L and All), i.e. do not create the train statistic,  only the test statistic will 
# be recorded.
# In this case, the classifier statistics is written for later use in RSSalg and MajorityVote algorithms
writeClassifiers=true

# If writeEnlargedTrainingSet=true the enlarged training set obtained by labeling unlabeled instances and adding them to training data during algorithm execution
# will be recorded. For algorithms that do not label unlabeled instances during execution (settings L and All), this property value will be ignored
writeEnlargedTrainingSet=false

# Number of different splits used with co-training. In this case, 100 independent co-training runs with generated 100 random splits will be executed 
noSplits=100

# Feature split used for co-training. 
# If none is specified:
#	- no feature splitting is done
#	- this setting can be used for co-training with natural split (views are defined in data.properties by setting 
#     multiple dataFiles) 
# If a splitting algorithm is required, this property should contain the name of the class implementing interface SplitterIF
# RSSalg uses RandomDifferentSplitsSplitter by default and ignores this setting 
featureSpliter=featureSplit.DifferentRandomSplitsSplitter


